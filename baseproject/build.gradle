apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    buildToolsVersion rootProject.ext.androidBuildToolsVersion

    defaultConfig {
        applicationId "com.sa.baseproject"
        minSdkVersion rootProject.ext.androidMinSdkVersion
        targetSdkVersion rootProject.ext.androidTargetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resValue "string", "app_name", "BaseProject"
        vectorDrawables.useSupportLibrary = true
    }

    dataBinding {
        enabled = true
    }

    kapt {
        generateStubs = true
    }

    flavorDimensions "default"

    productFlavors {
        stage {
            applicationId "com.sa.baseproject.stage"
            versionCode 3
            versionName "1.0"
        }
        dev {
            applicationId "com.sa.baseproject.dev"
            versionCode 2
            versionName "1.0"
        }
        prod {
            applicationId "com.sa.baseproject"
            versionCode 1
            versionName "1.0"
        }
    }


    signingConfigs {

        release {
            try {
                storeFile file("bproject.jks")
                storePassword KEYSTORE_PASSWORD
                keyAlias "bproject"
                keyPassword KEY_PASSWORD
            }
            catch (ignored) {
                throw new InvalidUserDataException("You should define KEYSTORE_PASSWORD and KEY_PASSWORD in gradle.properties.")
            }
        }


    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                renameAPK(variant)
            }
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildToolsVersion '28.0.3'
    androidExtensions {
        experimental = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.1-alpha01', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    // Android Support libs
    implementation 'androidx.appcompat:appcompat:1.1.0-beta01'
    implementation 'com.google.android.material:material:1.1.0-alpha07'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta2'
    implementation 'androidx.fragment:fragment:1.0.0'
    implementation 'androidx.core:core:1.0.2'
    implementation 'androidx.legacy:legacy-support-core-utils:1.0.0'
    implementation 'androidx.legacy:legacy-support-core-ui:1.0.0'
    implementation 'androidx.core:core-ktx:1.2.0-alpha02'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-alpha06'


    // Kotlin libs
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Retrofit, GSON and OkHttp
    implementation "com.squareup.retrofit2:retrofit:$retrofitLibraryVersion"
    implementation "com.google.code.gson:gson:$gsonLibraryVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitLibraryVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitLibraryVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "com.squareup.okhttp3:okhttp:$okHttpLibraryVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpLibraryVersion"

    // Architecture Libs
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.room:room-runtime:2.1.0'
    implementation 'androidx.lifecycle:lifecycle-runtime:2.0.0'
    implementation 'androidx.room:room-rxjava2:2.1.0'
    kapt 'androidx.lifecycle:lifecycle-compiler:2.0.0'
    kapt 'androidx.room:room-compiler:2.1.0'

    implementation 'androidx.paging:paging-runtime:2.1.0'
    implementation "android.arch.work:work-runtime-ktx:$workerVersion"

    // Picasso\Glide user base on your needs.
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation 'com.squareup.picasso:picasso:2.71828'

    implementation "androidx.media:media:1.1.0-rc01"

    //GCM libs
    implementation "com.google.android.gms:play-services-location:$playserviceLibraryVersion"


    // SDP and SSP libs for dimensions
    implementation "com.intuit.sdp:sdp-android:$sdpVersion"
    implementation "com.intuit.ssp:ssp-android:$sdpVersion"

// Coroutine
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.2.0'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
}
repositories {
    mavenCentral()
    google()
}


static def renameAPK(variant) {
    variant.outputs.all { output ->
        def formattedDate = new Date().format('dd-MM-YYYY')
        def projectName = variant.mergedFlavor.resValues.get('app_name').getValue()
        def projectVersionName = "_v" + variant.productFlavors.get(0).versionName
        def projectBuildCode = "_b" + variant.productFlavors.get(0).versionCode
        def buildDate = "_d" + formattedDate
        def flavorsName = "_" + variant.productFlavors.get(0).name
        def flavorsType = "_" + variant.variantData.variantConfiguration.buildType.name
        def fileName = projectName + projectVersionName + projectBuildCode + buildDate + flavorsName + flavorsType + ".apk"
        outputFileName = fileName
    }
}
